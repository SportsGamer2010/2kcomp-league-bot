# Production Docker Compose Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  discord-bot:
    # Production-specific environment variables
    environment:
      - LOG_LEVEL=WARNING
      - CHECK_INTERVAL=600  # 10 minutes for production
      - HTTP_TIMEOUT=60
      - HTTP_MAX_RETRIES=5
      - HTTP_RATE_LIMIT_DELAY=2
    
    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Production restart policy
    restart: always
    
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        compress: "true"
    
    # Production health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 60s
    
    # Production security
    security_opt:
      - no-new-privileges:true
    
    # Production read-only root filesystem (except data directory)
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    
    # Production ulimits
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    
    # Production labels for monitoring
    labels:
      - "com.2kcomp.league.bot.environment=production"
      - "com.2kcomp.league.bot.version=${BOT_VERSION:-latest}"
      - "com.2kcomp.league.bot.maintainer=2kcomp-league-team"

  # Optional: Add monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: 2kcomp-league-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bot-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: 2kcomp-league-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - bot-network
    profiles:
      - monitoring

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  bot-network:
    external: true
    name: 2kcomp-league-network
